CanvasExample5:

#:set s dp(150) # This will create a variable s with value 150dp

#Shapes 
<CanvasExample1>:
    canvas:
        Rectangle:
            pos: self.center_x-s/2, self.center_y-s/2
            size: s, s
        Ellipse:
            pos: 200, 500
            size: s, s/2
        Line:
            points: (0, 0, self.width/4, 100, self.width/2, 0, self.width*3/4, 100, self.width, 0)
            width: 2

#Lines dividing canvas in middle horizontally and vertically (+ sign)
<CanvasExample2>:
    canvas:
        Line:
            points: (0, self.height/2, self.width, self.height/2)
            width: 2
        Line:
            points: (self.width/2, 0, self.width/2, self.height)
            width: 2

#Shapes, ellipses
<CanvasExample3>:
    canvas:
        Color:
            rgba: 1, 0, 0, .3
        Line:
            circle: (200, 200, 100) # center_x, center_y, radius
            width: 2
        Line:
            ellipse: (500, 300, 100, 200) # center_x, center_y, radius_x, radius_y
            width: 4
        Color:
            rgba: 0, 0, 1, 1
        Line:
            rectangle: (800, 100, 300, 200) # x, y, w, h
            width: 2

#moving the shape on button click
<CanvasExample4>:
    Button:
        pos: 100, 400
        text: "Push Square"
        on_press: root.on_button_a_click()

#Bouncing ball, CanvasExample 5 in py file

#flags
<CanvasExample6>:
    BoxLayout
        size: root.size
        Widget:
            canvas:
                Color:
                    rgb: 0, 1, 0
                Rectangle:
                    size: self.size
        RelativeLayout:
            canvas:
                Color:
                    rgb: 0, 0, 1
                Rectangle:
                    size: self.size

#flag of france
<CanvasExample7>:
    RelativeLayout:
        canvas:
            Color:
                rgb: 0, 0, 1
            Rectangle:
                size: self.size
    RelativeLayout:
        canvas:
            Color:
                rgb: 1, 1, 1
            Rectangle:
                size: self.size
    RelativeLayout:
        canvas:
            Color:
                rgb: 1, 0, 0
            Rectangle:
                size: self.size

<ImagesExample@GridLayout>
    cols: 3
    Image:
        source: "images/cake.jpg"
    Image:
        source: "images/cake.jpg"
        allow_stretch: True
    Image:
        source: "images/cake.jpg"
        allow_stretch: True
        keep_ratio: False
    Image:
        source: "images/typing.gif"
        anim: True
        anim_delay: -1
        anim_loop: 1

<WidgetsExample>:
    cols:3
    ToggleButton:
        state: "normal"
        text: "OFF"
        on_press: root.on_toggle_button_click(self)
    Button:
        text: "Click Me"
        on_press: root.on_button_click()
        disabled: root.is_count_disabled
    Label:
        text: root.my_text
        font_name: "fonts/Lcd.ttf"
        font_size: "50dp"
        color: 1, .5, 1, 1

    Switch:
        id: my_switch
        active: True

    Slider:
        id: my_slider
        min: 0
        max: 100
        value: 1
        #on_value: root.on_slider_value_changed(self)
        disabled: not my_switch.active
        orientation: "vertical"

    BoxLayout:
        orientation: "vertical"
        padding: ("20dp", "20dp", "20dp", "20dp")

        Label:
            text: str(int(my_slider.value)) #root.slider_value
            font_name: "fonts/Lcd.ttf"
            font_size: "50dp"
            color: 1, .5, 1, 1
        
        ProgressBar:
            max: 100
            value: my_slider.value
    
    TextInput:
        id: my_text_input
        text: "Hello"
        padding: ("20dp", "20dp", "20dp", "20dp")
    
    Label:
        text: my_text_input.text #"New Label"
        font_name: "fonts/Lcd.ttf"
        font_size: "50dp"
        color: 1, .5, 1, 1

<PageLayoutExample@PageLayout>:
    MainWidget:
    BoxLayoutExample:
    AnchorLayoutExample:
    GridLayoutExample:


<ScrollViewExample@ScrollView>:
    StackLayoutExample:
        size_hint: 1, None
        height: self.minimum_height

<StackLayoutExample>:
    # left-right  top-bottom
    # orientation: "lr-bt"
    # padding: ("20dp", "20dp", "20dp", "20dp")
    # spacing: "20dp", "20dp"


<GridLayoutExample@GridLayout>:
    # rows
    # cols
    # cols: 3
    rows: 2
    Button:
        text: "A"
        size_hint: None, 1
        width: "60dp"
    BoxLayoutExample:
    Button:
        text: "C"
    Button:
        text: "D"
        size_hint: None, 1
        width: "60dp"
    Button:
        text: "E"
    Button:
        text: "F"


<AnchorLayoutExample>:
    # right, left, center
    anchor_x: "center"
    # bottom, top, center
    anchor_y: "top"
    BoxLayout:
        size_hint: .2, .2
        Button:
            text: "A"
        Button:
            text: "B"

<BoxLayoutExample>:
    orientation: "horizontal"
    Button:
        text: "A"

        size_hint: .5, .5
        # size: "100dp", "60dp"
        # width: "100dp"
        # height: "60dp"
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_y": .5 }

    BoxLayout:
        orientation: "vertical"
        spacing: "10dp"
        Button:
            text: "B1"
        Button:
            text: "B2"
        Button:
            text: "B3"
        Button:
            text: "B4"
    Label:
        text: "C"

<MainWidget>:
    Button:
        text: "Hello"
        size: "100dp", "80dp"
        pos: "100dp", "200dp"
        color: 0, 0, 1, 1
    Label:
        text: "Hello2"
        size: "100dp", "80dp"
        pos: "200dp", "300dp"
        color: 1, 0, 0, 1

